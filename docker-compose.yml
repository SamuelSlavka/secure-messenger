version: '3'

services:
  backend:  
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports: 
      - '5000:5000'
    volumes:    
      - certbot-etc:/etc/letsencrypt
      - .:/backend/src
    networks:
      - app-network
    links:
      - postgres:postgres
    env_file:
      - .env

  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - backend
    networks:
      - app-network

  certbot:
    image: certbot/certbot:arm32v6-latest
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email slavka.samuel@gmail.com --agree-tos --no-eff-email --staging -d slavka.one  -d www.slavka.one

  postgres:
    image: postgres:10.5
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - '5432'
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    network_mode: host

  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - /mnt/mediastorage:/config
      - /mnt/mediastorage/movies:/movies
      - /mnt/mediastorage/series:/series
      - /mnt/mediastorage/books:/books
      - /mnt/mediastorage/music:/music
    restart: unless-stopped

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/rpi/slavkaone/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/rpi/slavkaone/dhparam/
      o: bind
  db-data:
  web-data:

networks:
  app-network:
    driver: bridge
