#http
server {
        listen 80;
        listen [::]:80;
        server_name slavka.one www.slavka.one;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }

        #when accessing with http redirescts to https
        location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}
#https
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name slavka.one www.slavka.one;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/slavka.one/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/slavka.one/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        # api query
        location /api/ {
                try_files $uri @backend;
        }
        #proxy to backend
        location @backend {
                proxy_pass http://backend:5000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;        
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;               
        }

        location / {
                try_files $uri @frontend;
        }

        #proxy to frontend
        location @frontend {
                proxy_pass http://frontend:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;        
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        }

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
}